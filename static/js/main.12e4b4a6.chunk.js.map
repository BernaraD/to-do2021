{"version":3,"sources":["ToDoListItem/ToDoListItem.js","ToDoList/ToDoList.js","App Header/App-Header.js","Item-Status/Item-Status.js","CreateNew/Create.js","App/App.js","reportWebVitals.js","index.js"],"names":["ToDoListItem","props","todoItem","id","onDelete","onDoneToggle","onEdit","todoTitle","title","todoImportant","important","isToDoDone","done","useState","editedTodo","setEditTodo","editMode","setEditMode","toDoStyle","textDecoration","color","fontWeight","type","value","onChange","e","target","className","onClick","style","ToDoList","todos","map","el","index","_id","AppHeader","toDo","ItemStatus","Create","newTask","setNewTask","placeholder","addNewTask","initialTodos","Math","random","App","setTodos","classname","Date","toString","console","log","updatedTasks","newTodos","todoId","updatedTodos","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12e4b4a6.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport './ToDoListItem.css'\r\n\r\n\r\nfunction ToDoListItem(props) {\r\n\r\n    const {todoItem, id, onDelete, onDoneToggle, onEdit} = props;\r\n\r\n\r\n    const todoTitle = todoItem.title;\r\n    const todoImportant = todoItem.important;\r\n    const isToDoDone = todoItem.done;\r\n\r\n    const [editedTodo, setEditTodo] = useState(todoTitle)\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n\r\n    const toDoStyle = isToDoDone === true ? {\r\n        textDecoration: 'line-through',\r\n        color: 'grey',\r\n        fontWeight: todoImportant ? 'bold' : 'normal'\r\n    } : {color: 'steelblue'}\r\n\r\n\r\n    const saveBtnClick = () => {\r\n        onEdit(id, editedTodo)\r\n        setEditMode(false);\r\n    }\r\n\r\n    const editHandler = (e) => {\r\n      setEditTodo(e.target.value)\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {editMode ? (\r\n                <div>\r\n                    <input type=\"text\" value={editedTodo} onChange={editHandler}/>\r\n                    <button type=\"submit\" className=\"btn btn-outline-danger btn-sm float-right\" onClick={() => setEditMode(false)}>Cancel</button>\r\n                    <button type=\"submit\" className=\"btn btn-outline-success btn-sm float-right\" onClick={saveBtnClick}>Save</button>\r\n                </div>\r\n\r\n            ) : (\r\n                <div>\r\n                   <span className=\"todo-list-item\">\r\n\r\n            \r\n            \r\n            <span className=\"todo-list-item-label\" style={toDoStyle}>\r\n\r\n                {todoTitle}\r\n\r\n            </span>\r\n\r\n            <button type='button' className=\"btn btn-outline-danger btn-sm float-right\"\r\n                    onClick={() => onDelete(id)}><i className=\"fa fa-trash-o\"/></button>\r\n\r\n\r\n            <button type='button' className=\"btn btn-outline-primary btn-sm float-right\"\r\n                    onClick={() => setEditMode(true)}><i className=\"fa fa-pencil\"/></button>\r\n\r\n             <button type='button' className=\"btn btn-outline-success btn-sm float-right\"\r\n                     onClick={() => onDoneToggle(id, todoItem.done)}>{isToDoDone ? <i\r\n                 className=\"fa fa-exclamation\"/> : <i\r\n                 className=\"fa fa-check\"/>}</button>\r\n\r\n\r\n        </span>\r\n\r\n                </div>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ToDoListItem;","import React from 'react';\r\nimport ToDoListItem from \"../ToDoListItem/ToDoListItem\";\r\nimport './ToDoList.css'\r\n\r\nconst ToDoList = (props) => {\r\n\r\n    const {todos, onDelete, onDoneToggle, onEdit} = props;\r\n\r\n\r\n    return (\r\n        <div className='todo-list list-group'>\r\n\r\n            {todos.map((el, index) => <li className=\"list-group-item\" key={el._id}>\r\n                    <ToDoListItem todoItem={el}\r\n                                  id={el._id}\r\n                                  onDelete={onDelete}\r\n                                  onDoneToggle={onDoneToggle}\r\n                                  onEdit={onEdit}\r\n\r\n                    />\r\n                </li>\r\n            )}\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoList;","import React from 'react';\r\nimport './App-Header.css'\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>My todo List</h1>\r\n            {/*<h2>{toDo} more to do, {done} done</h2>*/}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default AppHeader","import React from 'react';\r\nimport './Item-Status.css';\r\n\r\nconst ItemStatus = () => {\r\n    return (\r\n        <div className=\"btn-group\">\r\n            {/*<button type=\"button\" className=\"btn btn-info\">All</button>*/}\r\n            {/*<button type=\"button\" className=\"btn btn-outline-secondary\">Active</button>*/}\r\n            {/*<button type=\"button\" className=\"btn btn-outline-secondary\">Done</button>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemStatus;","import React, {useState} from 'react'\r\n\r\n\r\nfunction Create(props) {\r\n\r\n    const [newTask, setNewTask] = useState('')\r\n\r\n    const onInputChange = (e) => {\r\n        setNewTask(e.target.value);\r\n    }\r\n\r\n    return (\r\n\r\n            <div className=\"form-group\">\r\n\r\n                <input type=\"text\"\r\n                       className=\"form-control new-todo-label\"\r\n                       value={newTask}\r\n                       onChange={onInputChange}\r\n                       placeholder=\"Create new task\"  />\r\n\r\n                <button type=\"submit\" className=\"btn btn-outline-secondary float-right\"\r\n                        onClick={() => props.addNewTask(newTask)}>Add\r\n                </button>\r\n\r\n\r\n\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Create;","import './App.css';\nimport React, {useState} from 'react';\nimport ToDoList from \"../ToDoList/ToDoList\";\nimport AppHeader from \"../App Header/App-Header\";\nimport {v4 as uuidv4} from 'uuid';\nimport SearchPanel from \"../SearchPanel/SearchPanel\";\nimport ItemStatus from \"../Item-Status/Item-Status\";\nimport Create from \"../CreateNew/Create\";\n\n\nconst initialTodos = [\n\n    {_id: Math.random(), title: 'Build react app', done: true },\n    {_id: Math.random(), title: 'Drink coffee', done: false },\n    {_id: Math.random(), title: 'Call mom', done: false},\n\n];\n\nfunction App() {\n\n    const [todos, setTodos] = useState(initialTodos);\n\n    const addNewTask = (newTask) => {\n        console.log(newTask)\n        let updatedTasks = {\n            _id: Math.random(),\n            title: newTask,\n            done: false,\n            important: false\n        }\n        const newTodos = [...todos, updatedTasks]\n        setTodos(newTodos);\n    };\n\n\n    const onDelete = (todoId) => {\n        const updatedTodos = todos.filter(el => el._id !== todoId)\n        setTodos(updatedTodos)\n    };\n\n    const onDoneToggle = (todoId) => {\n        const updatedTodos = todos.map(el => {\n            if (el._id === todoId)\n                return {...el, done: !el.done}\n            else return el\n        })\n        setTodos(updatedTodos)\n    };\n\n    const onEdit = (todoId, editedTodo) => {\n        const updatedTodos = todos.map(el => {\n            if (el._id === todoId)\n                return {...el, title: editedTodo}\n            else return el\n        })\n        setTodos(updatedTodos)\n    }\n\n    return (\n        <div classname=\"App\">\n\n\n            <div className=\"todo-app\">\n                <span>{(new Date()).toString()}</span>\n\n                <AppHeader/>\n\n                <Create addNewTask={addNewTask}/>\n                {/*<div className=\"top-panel d-flex\">*/}\n                {/*    <SearchPanel />*/}\n                {/*</div>*/}\n\n                <ItemStatus/>\n                <ToDoList todos={todos} onDelete={onDelete}\n                          onDoneToggle={onDoneToggle}\n                          onEdit={onEdit}\n\n                />\n\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}