{"version":3,"sources":["ToDoListItem/ToDoListItem.js","ToDoList/ToDoList.js","App Header/App-Header.js","Item-Status/Item-Status.js","CreateNew/Create.js","App/App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["connect","state","todos","dispatch","onDelete","todoId","type","payload","saveEdited","editedTodo","onDoneToggle","props","useState","editMode","setEditMode","title","setEditedTodo","id","doneStyle","done","color","textDecoration","fontWeight","value","onChange","e","target","className","onClick","style","listOfTodos","map","el","_id","AppHeader","toDo","ItemStatus","addTodo","newTask","setNewTask","placeholder","App","classname","Date","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","Math","random","todo","action","console","log","updatedTodos","filter","toggleTodo","editedTodos","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e62fd66.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport \"./ToDoListItem.css\"\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction ToDoListItem(props) {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [editedTodo, setEditedTodo] = useState(props.title)\r\n\r\n\r\n    const saveEdited = () => {\r\n        props.saveEdited(props.id, editedTodo);\r\n        setEditMode(false);\r\n\r\n    }\r\n    const inputHandler = (e) => {\r\n        setEditedTodo(e.target.value);\r\n    }\r\n\r\n    const doneStyle = props.done === true ? {\r\n        color: 'grey',\r\n        textDecoration: \"line-through\"\r\n    } : {\r\n        fontWeight: 'bold',\r\n        color: 'steelblue'\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {editMode ? (\r\n                <span>\r\n                    <input  type=\"text\"\r\n                            value={editedTodo} onChange={inputHandler}/>\r\n\r\n\r\n                    <button className=\"btn btn-outline-danger btn-sm float-right\" type=\"button\" onClick={saveEdited}>Cancel</button>\r\n                    <button className=\"btn btn-outline-success btn-sm float-right\" type=\"button\" onClick={saveEdited}>Save</button>\r\n                </span>\r\n\r\n\r\n\r\n            ) : (\r\n                <span className=\"todo-list-item\">\r\n                    <span className=\"todo-list-item-label\"  style={doneStyle} >\r\n\r\n                            {props.title}\r\n\r\n\r\n                        <button className=\"btn btn-outline-danger btn-sm float-right\"\r\n                                onClick={() => props.onDelete(props.id)}><i className=\"fa fa-trash-o\"/></button>\r\n\r\n                        <button className=\"btn btn-outline-success btn-sm float-right\"\r\n                                onClick={() => setEditMode(true)}><i className=\"fa fa-pencil\"/></button>\r\n\r\n                        <button className=\"btn btn-outline-success btn-sm float-right\"\r\n                                onClick={() => props.onDoneToggle(props.id)}>{ props.done ? <i className=\"fa fa-check\"/> : <i className=\"fa fa-check\"/>}</button>\r\n\r\n                    </span>\r\n                </span>\r\n            )}\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    todos: state.todos\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onDelete: (todoId) => dispatch({type: 'TODO_DELETE', payload: todoId}),\r\n    saveEdited: (todoId, editedTodo) => dispatch({type: 'TODO_EDIT', payload: {todoId, editedTodo}}),\r\n    onDoneToggle: (todoId) => dispatch({type: 'TODO_DONE_TOGGLE', payload: todoId }),\r\n});\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps) (ToDoListItem);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport ToDoListItem from \"../ToDoListItem/ToDoListItem\";\r\nimport './ToDoList.css'\r\n\r\n\r\nfunction ToDoList(props) {\r\n\r\n    const listOfTodos = props.todos;\r\n\r\n    return (\r\n        <div >\r\n            <ul className='list-group todo-list todo-list'>\r\n                {listOfTodos.map(el => <li className=\"list-group-item\" key={el._id}>\r\n                    <ToDoListItem title={el.title}\r\n                                  done={el.done}\r\n                                  id={el._id}/>\r\n\r\n                </li>)}\r\n\r\n\r\n            </ul>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n//при помощи этой функции мы можем обращаться в Global Store\r\nconst mapStateToProps = (state) => ({\r\n    todos: state.todos\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, null)(ToDoList);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './App-Header.css'\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>My todo List</h1>\r\n            {/*<h2>{toDo} more to do, {done} done</h2>*/}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default AppHeader","import React from 'react';\r\nimport './Item-Status.css';\r\n\r\nconst ItemStatus = () => {\r\n    return (\r\n        <div className=\"btn-group\">\r\n            {/*<button type=\"button\" className=\"btn btn-info\">All</button>*/}\r\n            {/*<button type=\"button\" className=\"btn btn-outline-secondary\">Active</button>*/}\r\n            {/*<button type=\"button\" className=\"btn btn-outline-secondary\">Done</button>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemStatus;","import React, {useState} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport './Create.css'\r\n\r\n\r\nfunction Create(props) {\r\n\r\n    //пустой массив для деструктуризации, чтобы ничего не сломалось default value = []\r\n    const {todos = [],} = props;\r\n\r\n    const [newTask, setNewTask] = useState('')\r\n\r\n    const onInputChange = (e) => {\r\n        setNewTask(e.target.value);\r\n    };\r\n\r\n    const addTodo = () => {\r\n        props.addTodo(newTask)\r\n        setNewTask('')\r\n    };\r\n\r\n    return (\r\n\r\n            <div className=\"form-group\">\r\n\r\n                <input type=\"text\"\r\n                       className=\"form-control new-todo-label\"\r\n                       value={newTask}\r\n                       onChange={onInputChange}\r\n                       placeholder=\"Create new task\"  />\r\n\r\n                <button type=\"submit\" className=\"btn btn-outline-secondary float-right\"\r\n                        onClick={addTodo}>Add</button>\r\n\r\n\r\n\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    todos: state.todos\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addTodo: (newTask) => dispatch( {type: \"ADD_TODO\", payload: newTask} )\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Create);","import './App.css';\nimport React, {useState} from 'react';\nimport ToDoList from \"../ToDoList/ToDoList\";\nimport AppHeader from \"../App Header/App-Header\";\nimport {v4 as uuidv4} from 'uuid';\nimport SearchPanel from \"../SearchPanel/SearchPanel\";\nimport ItemStatus from \"../Item-Status/Item-Status\";\nimport Create from \"../CreateNew/Create\";\n\n//\n// const initialTodos = [\n//\n//     {_id: Math.random(), title: 'Build react app', done: true },\n//     {_id: Math.random(), title: 'Drink coffee', done: false },\n//     {_id: Math.random(), title: 'Call mom', done: false},\n//\n// ];\n\nfunction App() {\n\n    // const [todos, setTodos] = useState(initialTodos);\n\n    // const addNewTask = (newTask) => {\n    //     console.log(newTask)\n    //     let updatedTasks = {\n    //         _id: Math.random(),\n    //         title: newTask,\n    //         done: false,\n    //         important: false\n    //     }\n    //     const newTodos = [...todos, updatedTasks]\n    //     setTodos(newTodos);\n    // };\n\n\n    // const onDelete = (todoId) => {\n    //     const updatedTodos = todos.filter(el => el._id !== todoId)\n    //     setTodos(updatedTodos)\n    // };\n    //\n    // const onDoneToggle = (todoId) => {\n    //     const updatedTodos = todos.map(el => {\n    //         if (el._id === todoId)\n    //             return {...el, done: !el.done}\n    //         else return el\n    //     })\n    //     setTodos(updatedTodos)\n    // };\n    //\n    // const onEdit = (todoId, editedTodo) => {\n    //     const updatedTodos = todos.map(el => {\n    //         if (el._id === todoId)\n    //             return {...el, title: editedTodo}\n    //         else return el\n    //     })\n    //     setTodos(updatedTodos)\n    // }\n\n    return (\n        <div classname=\"App\">\n\n\n            <div className=\"todo-app\">\n                <span>{(new Date()).toString()}</span>\n\n                <AppHeader/>\n\n                <Create/>\n                {/*<div className=\"top-panel d-flex\">*/}\n                {/*    <SearchPanel />*/}\n                {/*</div>*/}\n\n                <ItemStatus/>\n                <ToDoList/>\n\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    todos: [\r\n        {_id: Math.random(), title: 'Build react app', done: true },\r\n        {_id: Math.random(), title: 'Drink coffee', done: false },\r\n        {_id: Math.random(), title: 'Call mom', done: false},\r\n    ]\r\n};\r\n\r\nconst todo = (state= initialState, action) => {\r\n    switch (action.type) {\r\n        case \"GET_TODO_LIST\":\r\n            return {\r\n                ...state,\r\n                todos: action.payload\r\n            };\r\n\r\n        case \"SET_TODO_LIST\":\r\n            return {\r\n                ...state,\r\n                todos: action.payload\r\n            };\r\n\r\n        case \"ADD_TODO\":\r\n            return {\r\n                ...state,\r\n                todos: [...state.todos, {title: action.payload, done: false, _id: Math.random()}]\r\n            };\r\n\r\n        case 'TODO_DELETE':\r\n            console.log(action.payload)\r\n            const updatedTodos = state.todos.filter(el => el._id !== action.payload)\r\n            return {\r\n                ...state,\r\n                todos: updatedTodos\r\n            }\r\n\r\n        case 'TODO_DONE_TOGGLE':\r\n            const toggleTodo = state.todos.map(el => {\r\n                if (el._id === action.payload)\r\n                    return ({\r\n                        ...el,\r\n                        done: !el.done\r\n                    })\r\n                else return el\r\n            })\r\n            return {\r\n                ...state,\r\n                todos: toggleTodo\r\n            }\r\n\r\n        case 'TODO_EDIT':\r\n            const editedTodos = state.todos.map(el => {\r\n                if (el._id === action.payload.todoId)\r\n                    return ({\r\n                        ...el,\r\n                        title: action.payload.editedTodo\r\n                    })\r\n                else return el\r\n            })\r\n            return {\r\n                ...state,\r\n                todos: editedTodos\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default todo;","import {createStore, applyMiddleware} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport thunk from 'redux-thunk'\r\nimport todo from \"./reducer\";\r\n\r\n// здесь меняем State. A Фунция todo приходит из reducer\r\n\r\nconst store = createStore(todo, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n\n      {/*//оборачиваем в Provider чтобы все компоненты имели доступ к store*/}\n      <Provider store={store}>\n          <App />\n      </Provider>\n\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}